<% 
  should_show_api_call_button = true;

  bt_name   = @presenter_obj.client_token.name;
  bt_symbol = @presenter_obj.client_token.symbol;

  fiat_symbol = @presenter_obj.client_fiat_curreny_pref_symbol;
  fiat_type   = @presenter_obj.client_fiat_curreny_symbol;
  fiat_display_text = @presenter_obj.client_fiat_curreny_display_text;

  client_id = @presenter_obj.client_token.client_id;
  auto_create_transactions = !@presenter_obj.client_token.step_two_done?;

  kind_display_text = {
    :user_to_company => "User to Company",
    :user_to_user => "User to User",
    :company_to_user => "Company to User"
  };

  should_show_api_call_button = true;
  if @presenter_obj.api_console_data.present? && @presenter_obj.api_console_data.for_create_transaction_kind.present?
    api_console_data = @presenter_obj.api_console_data.for_create_transaction_kind
    request_params_str = api_console_data['request_params']
    request_params = request_params_str.split('&')
  else
    should_show_api_call_button = false
  end


%>

<div class="container">

  <div class="row">
    <div class="col-12 p-0">
      <div class="d-flex justify-content-between align-items-center mt-6 mb-5">
        <h3 class="mb-0">Actions</h3>
        <button id="create_transaction_btn" class="btn btn-gold float-right">ADD Action</button>
      </div>
    </div>
  </div>

  <div class="transactions mb-1">
    <div class="row header">
      <div class="col-2">NAME</div>
      <div class="col-2">VALUE (<%= fiat_display_text %>)</div>
      <div class="col-2">VALUE (<%= bt_symbol %>)</div>
      <div class="col-2">PRICE ORACLE</div>
      <div class="col-3 p-0">COMMISSION</div>
    </div>
  </div>

  <div class="row">
    <div class="col-12 slider-parent-container" data-slider-content-wrapper=".ost-table-row">
      <div id="transaction_list" class="transactions" data-simple-table data-url="/api/economy/action/list">
        <script type="text/x-handlebars-template" data-row-template>
          <div class="row align-items-center mt-1 mb-3 rounded ost-table-row cell">
            <div class="col-2">{{name}}<br/><small class="font-weight-light">{{kind_display_text}}</small></div>
            {{#IfIsAmountSet amount}}
              <div class="col-2"><%= fiat_symbol %>{{value_in_fiat}}</div>
              <div class="col-2">{{value_in_bt}}</div>
            {{else}}
              <div class="col-2">NA</div>
               <div class="col-2">NA</div>
            {{/IfIsAmountSet}}
            <div class="col-2">{{price_oracle_text}}</div>
            {{#IfIsarbitraryCommission arbitrary_commission}}
              <div class="col-1 px-0">NA</div>
            {{else}}
              <div class="col-1 px-0">{{commission_percent}}&#37;</div>
            {{/IfIsarbitraryCommission}}
            <div class="col-3">
              <% if should_show_api_call_button %>
                <button class="showApiCallBtn btn btn-info slider-btn">
                  <svg class="icon-api-transactions align-middle">
                    <switch>
                      <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#icon-api-transactions"></use>
                    </switch>
                  </svg>
                  <span class="align-middle">API Call</span>
                </button>
              <% end %>
              <a href="javascript:void(0)" class="editRow rounded-circle edit-btn btn-info" data-result-id="{{id}}" title="Edit">
                <svg class="icon-edit-transactions align-middle">
                  <switch>
                    <use class="icon-edit" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#icon-edit-transactions"></use>
                  </switch>
                </svg>
              </a>
              <input type="hidden" name="id" value={{id}}/>
              <input type="hidden" name="uts" value={{uts}}/>
            </div>
            <% if should_show_api_call_button %>
              <div class="code-session col-12">
                <comment class="w-100 code-comment">
                  // Below is as an example the API call that was requested to create this action type. <br />
                  // Note that the signature and the request_timestamp will have expired and need to be recalculated for each request. <br />
                  // Please access the API and SDK documentation from the Developers section for more details. <br />
                </comment>
                <code class="w-100 code-line">
                  <span class="curl-param-header">curl -i </span> <span class="curl-escape-character">\</span>
                  <br /><span class="curl-param-header"> -H</span> "Accept: application/json" <span class="curl-escape-character">\</span>
                  <% request_params.each do |request_param| %>
                    {{#IfShowRequesetParam '<%= request_param %>'}}
                     <br /><span class="curl-param-header"> -d</span> ' <%= request_param %> ' <span class="curl-escape-character">\</span>
                    {{/IfShowRequesetParam}}
                  <% end %>
                  <br /><span class="curl-param-header"> -X</span> <%= api_console_data['request_type'] %> <%= api_console_data['request_uri'] %>
                </code>
              </div>
            <% end %>
          </div>
        </script>
      </div>
    </div>
  </div>
  <%=
      render :partial => "shared/web/common/faqs",
             locals: {
             header: "FAQ",
        faqs: [
        {
          title: 'What are Actions and Action Amounts?',
      url: 'https://help.ost.com/support/solutions/articles/35000059256-what-are-transactions-and-transaction-values-'
      },
      {
        title: 'What are the different types of Actions?',
      url: 'https://help.ost.com/support/solutions/articles/35000059257-what-are-the-different-types-of-transactions-'
      },
      {
        title: 'What is a Price Oracle?',
      url: 'https://help.ost.com/support/solutions/articles/35000059258-what-is-a-price-oracle-'
      },
      {
        title: 'What are fees on Transactions?',
      url: 'https://help.ost.com/support/solutions/articles/35000059259-what-are-fees-on-transactions-'
      },
      {
        title: 'How do you set Action Amount?',
      url: 'https://help.ost.com/support/solutions/articles/35000059260-how-do-you-set-transaction-values-'
      }
      ]
      }
  %>
</div>

<% content_for :end_js do %>
  <script type="text/javascript">
    $( function () {
      var kindDisplayText = <%= raw kind_display_text.to_json %>;

      Handlebars.registerHelper('price_oracle_text', function(response, options ) {

        var rowData = response.data.root || {};
        return  rowData.currency === "BT" ? "Off" : "On";

      });

      Handlebars.registerHelper('kind_display_text', function(response, options ) {
        var rowData = response.data.root || {}
          , kind    = rowData.kind
        ;

        return kindDisplayText[ kind ];
      });

      Handlebars.registerHelper('value_in_fiat', function(response, options ) {
          var rowData =  response.data.root || {};
          if (rowData.amount){
            if ( rowData.currency === "BT" ) {
              return PriceOracle.btToFiat( rowData.amount );
            } else {
              return PriceOracle.toFiat( rowData.amount );
            }
          }
          return 'NA';
      });

      Handlebars.registerHelper('value_in_bt', function(response, options ) {
          var rowData =  response.data.root || {};
        if (rowData.amount) {
          if (rowData.currency === "BT") {

            return PriceOracle.toBt(rowData.amount);
          } else {
            return PriceOracle.fiatToBt(rowData.amount);
          }
        }
        return undefined;
      });


      Handlebars.registerHelper('IfShowApiCallButton', function(data, options ) {
        if (<%= should_show_api_call_button %>) {
          return options.fn(this);
        } else {
          return options.inverse(this);
        }
      });
      //{{uri_encoded key}}
      Handlebars.registerHelper('uri_encoded', function(data, options ) {
        return encodeURIComponent( data );
      });

      Handlebars.registerHelper('IfIsAmountSet', function(amount, options ) {
        if (amount) {
          return options.fn(true);
        }
        return options.inverse(false);
      });
      Handlebars.registerHelper('IfIsarbitraryCommission', function(arbitraryCommission, options ) {
        if (arbitraryCommission === false) {
          return options.inverse(false);
        }
        return options.fn(true);

      });

      Handlebars.registerHelper('commission_percent', function(response, options ) {
        var rowData =  response.data.root || {};
        return rowData.commission_percent;
      });

      Handlebars.registerHelper('IfShowRequesetParam', function(param, options) {
        var rowData =  options.data.root || {}
          , splitParams = param.split('=')
          , param_name = splitParams[0]
          , txKind = rowData.kind
        ;

        if (param_name === 'commission_percent') {
          var arbitraryCommission = rowData.arbitrary_commission
          ;

          if (txKind !== 'user_to_user' || arbitraryCommission === true ) {
            return options.inverse(this);
          }
        }else if (param_name === 'amount'){
          var arbitraryAmount = rowData.arbitrary_amount
          ;

          if ( arbitraryAmount === true ) {
            return options.inverse(this);
          }
        }else if (param_name === 'arbitrary_commission'){

          if (txKind !== 'user_to_user'){
            return options.inverse(this);
          }
        }

        return options.fn(this);
      });

      ost.transactions.init({
        auto_create_transactions: <%= auto_create_transactions %>,
        client_id: "<%= client_id %>",
      });
    });
  </script>
<% end %>