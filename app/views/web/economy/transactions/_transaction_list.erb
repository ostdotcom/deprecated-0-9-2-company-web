<% should_show_api_call_button = true %> 

<div id="transaction_list" class="" data-simple-table data-url="/api/economy/transaction/kind/list">
  <script type="text/x-handlebars-template" data-row-template>
    <div class="container simple-data-table-row" style="margin:10px auto;">
      <div class="row">
        <div class="col-2">{{name}}</div>
        <div class="col-2">{{kind_display_text}}</div>
        <div class="col-1">${{value_in_usd}}</div>
        <div class="col-1">{{value_in_bt}}</div>
        <div class="col-1">{{price_oracle_text}}</div>
        <div class="col-1">{{commission_percent}}&#37;</div>
        <div class="col-4">
          {{#IfShowApiCallButton id }}
            <button class="showApiCallBtn btn btn-info" >API Call</button> 
          {{/IfShowApiCallButton}}
          <button class="editRow btn btn-default">Edit</button>
          <input type="hidden" name="id" value={{id}}/>
          <input type="hidden" name="uts" value={{uts}}/>
        </div>
      </div>
    </div>
  </script>
</div>

<% content_for :end_js do %>
  <script type="text/javascript" 
    src="//cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.11/handlebars.js"></script>

  <script type="text/javascript">
    Handlebars.registerHelper('price_oracle_text', function(response, options ) { 

      var rowData = response.data.root || {};
      return rowData.use_price_oracle ? "Yes" : "No";
      return "YES";
    });

    var kindDisplayText = {
      "user_to_company": "User to Company",
      "user_to_user": "User to User",
      "company_to_user": "Company to User"
    };

    Handlebars.registerHelper('kind_display_text', function(response, options ) { 
      var rowData = response.data.root || {}
        , kind    = rowData.kind
      ;

      return kindDisplayText[ kind ];
    });

    Handlebars.registerHelper('IfShowApiCallButton', function(data, options ) { 
      console.log("IfShowApiCallButton called!", arguments); 
      if (<%= should_show_api_call_button %>) {
        return options.fn(this);
      } else {
        return options.inverse(this);
      }
    });
    ost.transactions.init({
    
    });  
  </script>
<% end %>