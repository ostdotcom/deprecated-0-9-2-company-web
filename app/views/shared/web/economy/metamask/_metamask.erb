<%
  client_token = @presenter_obj.client_token
  #Place for backend to do stuff.
  token_name = client_token.name;
  token_symbol = client_token.symbol;
  token_icon = client_token.symbol_icon;

  if @presenter_obj.chain_interaction_params.present?
    value_chain_id = @presenter_obj.chain_interaction_params.value_chain_id;
    utility_chain_id = @presenter_obj.chain_interaction_params.utility_chain_id;
    simple_token_contract_address = @presenter_obj.chain_interaction_params.simple_token_contract_addr;
    staker_addr = @presenter_obj.chain_interaction_params.staker_addr;
  else
    value_chain_id = ''
    utility_chain_id = ''
    simple_token_contract_address = ''
    staker_addr = ''
  end

  eligible_grant_value = 10000;
  eligible_grant_unit = "OST &alpha;"
  has_registered_address = false;
  grant_eth_from_metamask_focet = Rails.env.development? ? false : true
  grant_eth_from_ost_focet = true;
  validate_transaction_hash_interval = 5000; #Miliseconds.
  validate_transaction_hash_max_try = 100;

  partial_locals = {
    :token_name => token_name,
    :token_symbol => token_symbol,
    :token_icon => token_icon,
    :value_chain_id => value_chain_id,
    :utility_chain_id => utility_chain_id,
    :eligible_grant_value => eligible_grant_value,
    :eligible_grant_unit => eligible_grant_unit,
    :has_registered_address => has_registered_address,
    :grant_eth_from_metamask_focet => grant_eth_from_metamask_focet,
    :grant_eth_from_ost_focet => grant_eth_from_ost_focet,
    :validate_transaction_hash_interval => validate_transaction_hash_interval,
    :validate_transaction_hash_max_try  => validate_transaction_hash_max_try,
    :simple_token_contract_address => simple_token_contract_address
  }
%>

<% content_for :end_js do %>
<script type="text/javascript">
  $(document).ready(function () {
    var config = {
      tokenName         : "<%= token_name %>",
      tokenSymbol       : "<%= token_symbol %>",
      tokenIcon         : "<%= token_icon %>",
      eligibleGrantVal  : <%= eligible_grant_value %>,
      eligibleGrantUnit : "<%= eligible_grant_unit %>",
      valueChainId      : <%= value_chain_id %>,
      utilityChianId    : <%= utility_chain_id %>,
      hasRegisteredAddress : <%= has_registered_address %>,
      grantEthFromMetamaskFocet: <%= grant_eth_from_metamask_focet %>,
      grantEthFromOstFocet: <%= grant_eth_from_ost_focet %>,
      validateTransactionHashInterval: <%= validate_transaction_hash_interval %>,
      validateTransactionHashMaxTry: <%= validate_transaction_hash_max_try %>,
      simpleTokenContractAddress: "<%= simple_token_contract_address %>"
    };
    ost.metamask.init( config );
  });
</script>
<% end %>

<% content_for :cover_elements do %>
  <div id="installMetamaskCover" class="cover-element metamask-flow">
    <div class="container">
      <%= render :partial => "shared/web/economy/metamask/install_metamask", 
      :locals => partial_locals %>
    </div>
  </div>
  <div id="metamaskLockedCover" class="cover-element metamask-flow">
    <div class="container">
      <%= render :partial => "shared/web/economy/metamask/metamask_locked",
      :locals => partial_locals %>
    </div>
  </div>
  <div id="metamaskWrongNetworkCover" class="cover-element metamask-flow">
    <div class="container">
      <%= render :partial => "shared/web/economy/metamask/metamask_wrong_network",
      :locals => partial_locals %>
    </div>
  </div>
  <div id="metamaskWrongAccountCover" class="cover-element metamask-flow">
    <div class="container">
      <%= render :partial => "shared/web/economy/metamask/metamask_wrong_account",
      :locals => partial_locals %>
    </div>
  </div>

  <div id="getInitialOstCover" class="cover-element">
    <div class="container">
      <%= render :partial => "/web/economy/planner/get_initial_ost", :locals => partial_locals %>
    </div>
  </div>


<% end %>

